@import './hero.css';
@import './press.css';
@import './transaction.css';
@import './why.css';
@import './sticky.css';





body{
    margin: 0;
}

section{
    block-size: 500px;
    border: 1px solid purple;
}


:root{
    --phoneInlineSize: 400px;
    --gridTemplateColumns: 1fr var(--phoneInlineSize) 1000px 1fr;
}

.grid{
    display: grid;
    grid-template-columns: var(--gridTemplateColumns);
    grid-template-areas: 'wrapper-start phone content wrapper-end';
}


@media screen and (max-width: 1400px){
    :root{
        --phoneInlineSize: 300px;
        --gridTemplateColumns: auto var(--phoneInlineSize) 1fr auto;
    }
}

@media screen and (max-width: 1000px){
    :root{
        --phoneBlockSize: 500px;
        --gridTemplateColumns: auto auto 1fr auto;
    }
    .grid{
        display: block;
    }
    .hero{
        block-size: auto;
        padding-block: 50px;
        grid-row-start: initial;
        padding-block-end: calc(var(--phoneBlockSize) / 2 + 3rem);
    }
    .hero-content{
        display: initial;
    }
    .press{
        grid-row-start: initial;
    }
    .sticky{
        position: initial;
        grid-area: initial;
        text-align: center;
        margin-block-start: calc(var(--phoneBlockSize) / 2 * -1);
        block-size: var(--phoneBlockSize);
        background-image: linear-gradient(to bottom, transparent 0%, transparent 50%, white 50%, white);
    }
    .sticky img{
        max-block-size: 100%;
    }
}


.grid section{
    grid-column: 1 / -1;
}


.inset-grid{
    display: grid;
    grid-template-columns: var(--gridTemplateColumns);
    grid-template-areas: '. . content .';
}

.inset-grid [class*="content"]{
    grid-area: content;
}

/* [class*="content"] este es un selector de atributo que hace que cualquier cosa que contenga la palabra "content" en su clase, se le apliquen estos estilos (sin inportar si es hero-content o ejemplo-content, con solo contener la palabra que pongamos entre comillas, se aplicara). */